b_5 <- ggplot(data = massa,
mapping = aes(x = factor(p5))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 5') + ylab('Contagem')
b_0 <- ggplot(data = massa,
mapping = aes(x = factor(p0))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 0') + ylab('Contagem')
b_05 <- ggplot(data = massa,
mapping = aes(x = factor(p05))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 05') + ylab('Contagem')
b_01 <- ggplot(data = massa,
mapping = aes(x = factor(p01))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 01') + ylab('Contagem')
b_6 <- ggplot(data = massa,
mapping = aes(x = factor(p6))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 6') + ylab('Contagem')
b_min <- ggplot(data = massa,
mapping = aes(x = factor(min_lat))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Latência mínima') + ylab('Contagem')
b_max <- ggplot(data = massa,
mapping = aes(x = factor(max_lat))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Latência máxima') + ylab('Contagem')
b_0156
ggpubr::ggarrange(b_0156, b_06, b_23,
b_237, b_4, b_1,
b_15,b_015, b_5,
b_0,b_05, b_01,b_6,
b_min,b_max,
nrow = 4,
ncol = 4)
tab_bi <- function(variavel){
tabela <- as.data.frame(table(variavel)) # frequência absoluta
tabela$min_lat <- round(tapply(massa$min_lat,
variavel,
mean),3)
tabela$desv_pad_min <- round(tapply(massa$min_lat,
variavel,
sd),3)
tabela$max_lat <- round(tapply(massa$max_lat,
variavel,
mean),3)
tabela$desv_pad_max <- round(tapply(massa$max_lat,
variavel,
sd),3)
names(tabela)[c(1,2)] <- c('Niveis', 'n')
tabela <- tabela[,c(1,3:6,2)]
return(tabela)
}
pander::pander(tab_bi(massa$p0156))
pander::pander(tab_bi(massa$p06))
pander::pander(tab_bi(massa$p23))
pander::pander(tab_bi(massa$p237))
pander::pander(tab_bi(massa$p4))
pander::pander(tab_bi(massa$p1))
pander::pander(tab_bi(massa$p15))
pander::pander(tab_bi(massa$p015))
pander::pander(tab_bi(massa$p5))
knitr::opts_chunk$set(echo = TRUE, cache = FALSE,fig.align='center', fig.width=5, fig.height=5)
knitr::opts_knit$set(root.dir = "~/msc/4_latencias/fase2")
# Leitura
dados <- read.csv2('latencias_2_NOVA.csv', header = T, sep = ',')
knitr::opts_chunk$set(echo = TRUE, cache = FALSE,fig.align='center', fig.width=5, fig.height=5)
knitr::opts_knit$set(root.dir = "~/msc/4_latencias/fase2")
#---------------------------------------------------------------
library(tidyverse)
# Leitura
dados <- read.csv2('latencias_2_NOVA.csv', header = T, sep = ',')
indices <- subset(dados, dados$min_lat<=21 & dados$max_lat<=30)$n
massa <- subset(dados, dados$n %in% indices)
analista <- subset(dados, !(dados$n %in% indices))
b_0156 <- ggplot(data = massa,
mapping = aes(x = factor(p0156))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 0156') + ylab('Contagem')
nrow(massa)
nrow(analista)
indices <- subset(dados, dados$min_lat<=45 & dados$max_lat<=45)$n
massa <- subset(dados, dados$n %in% indices)
analista <- subset(dados, !(dados$n %in% indices))
nrow(massa)
nrow(analista)
indices <- subset(dados, dados$min_lat<=46 & dados$max_lat<=46)$n
massa <- subset(dados, dados$n %in% indices)
analista <- subset(dados, !(dados$n %in% indices))
nrow(massa)
nrow(analista)
knitr::opts_knit$set(root.dir = "~/msc/4_latencias/fase2")
# Leitura
dados <- read.csv2('latencias_2_NOVA.csv', header = T, sep = ',')
box("p237")
---
output:
html_document:                    # Classe de documento.
toc: true                       # Exibir sum?rio.
toc_depth: 2                    # Profundidade do sum?rio.
toc_float:                      # Sum?rio flutuante na borda.
collapsed: true
smooth_scroll: true
number_sections: true           # Se??es numeradas.
theme: cosmo
#spacelab
#default,cerulean,journal,flatly,readable,spacelab,
#united,cosmo,lumen,paper,sandstone,simplex,yeti
---
output:
html_document:                    # Classe de documento.
toc: true                       # Exibir sum?rio.
toc_depth: 2                    # Profundidade do sum?rio.
toc_float:                      # Sum?rio flutuante na borda.
collapsed: true
smooth_scroll: true
number_sections: true           # Se??es numeradas.
theme: cosmo
#spacelab
#default,cerulean,journal,flatly,readable,spacelab,
#united,cosmo,lumen,paper,sandstone,simplex,yeti
highlight: espresso
#default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, and textmate
#css: styles.css                 # Caminho para arquivo CSS.
fig_width: 7                    # Lagura das figuras.
fig_height: 6                   # Altura das figuras.
fig_caption: true               # Exibica??o de legenda.
fig_align: 'center'
code_folding: hide              # Esconder/exibir bloco de c?digo.
#    keep_md: true                   # Manter o arquivo md.
#template: quarterly_report.html # Caminho para o template.
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, cache = FALSE,fig.align='center', fig.width=5, fig.height=5)
knitr::opts_knit$set(root.dir = "~/msc/4_latencias/fase2")
```
---
<center>
<font size="6">
<p align=”center”> <b> Análise exploratória da segunda base de latências </b> </center>
</font>
</center>
---
# Limpeza
Numa primeira análise optamos pela remoção das portas 0156, 06, 237, 1, 15, 05, 6 devido à alta proporção de zeros, isto é, neste conjunto de dados estas portas foram poucas vezes usadas. As portas 23, 4, 015, 5, 0, 01 foram analisadas como binárias (foi ou não usada).
---
Ainda com base numa análise inicial, foi constatado que a massa de latências está entre 0 e 46 para a mínima e 0 e 46 para a máxima, valores fora desses intervalos são poucos e extremos e cabe a um analista avaliar estes casos.
---
Com isto foram geradas duas bases:
- A primeira, para análise manual por um especialista no assunto. Contemplava valores de latência acima de 46 para mínima ou de 46 para máxima. Esta contém 11 casos.
- A segunda, para análise estatística. Contemplava valores de latência mínima abaixo de 20 e máxima abaixo de 40. Esta contém 1564 casos.
---
Base para análise manual:
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = FALSE}
#---------------------------------------------------------------
library(tidyverse)
#---------------------------------------------------------------
# Leitura
dados <- read.csv2('latencias_2_NOVA.csv', header = T, sep = ',')
#---------------------------------------------------------------
# Seleção das variaveis de interesse
#dados <- select(dados, n, inst, lock, segment,
#                p0156, p06, p23, p4, p1, p15, p0, p05,
#                min_lat, max_lat )
#---------------------------------------------------------------
#Transformando portas em binárias
dados$p23 <- as.factor(ifelse(dados$p23 > 0, 1,0))
dados$p4 <- as.factor(ifelse(dados$p4 > 0, 1,0))
dados$p015 <- as.factor(ifelse(dados$p015 > 0, 1,0))
dados$p5 <- as.factor(ifelse(dados$p5 > 0, 1,0))
dados$p0 <- as.factor(ifelse(dados$p0 > 0, 1,0))
dados$p01 <- as.factor(ifelse(dados$p01 > 0, 1,0))
dados$p237 <- as.factor(dados$p237)
#---------------------------------------------------------------
# Divisão da base
# latência mínima entre 0 e 15 &
# latência máxima entre 0 e 20
indices <- subset(dados, dados$min_lat<=46 & dados$max_lat<=46)$n
massa <- subset(dados, dados$n %in% indices)
analista <- subset(dados, !(dados$n %in% indices))
options(width=80)
DT::datatable(analista, rownames = FALSE,
options = list(pageLength = 12
))
```
---
As seções seguintes referem-se à análise exploratória da base maior, que continha 1564 observações.
---
# Análise univariada
Análise de cada uma das variáveis disponíveis na base no que diz respeito a frequência de cada valor e distribuição.
---
## Tabelas de frequência {.tabset .tabset-fade}
Frequência absoluta e relativa de cada nível referente a cada uma das variáveis disponíveis.
```{r, echo=FALSE}
# Função para geração de tabela de frequência
tb_freq <- function(vetor){
tabela <- as.data.frame(table(vetor)) # frequência absoluta
tabela$Freq_relativa <- round(prop.table(tabela$Freq),3) # frequência relativa
names(tabela)[1] <- 'Niveis'
return(tabela)
}
# Função para geração de tabela de frequência por classes
tb_freq2 <- function(vetor){
h <- hist(vetor, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
Classes <- cut(vetor, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
tabela <- as.data.frame(table(Classes)) #gerando tabela com faixas
tabela$Freq_relativa <- round(prop.table(tabela$Freq),3) # frequência relativa
return(tabela)
}
```
---
### p23
<center>
```{r, echo=FALSE}
pander::pander(tb_freq(massa$p23))
```
</center>
---
### p4
<center>
```{r, echo=FALSE}
pander::pander(tb_freq(massa$p4))
```
</center>
---
### p015
<center>
```{r, echo=FALSE}
pander::pander(tb_freq(massa$p015))
```
</center>
---
### p5
<center>
```{r, echo=FALSE}
pander::pander(tb_freq(massa$p5))
```
</center>
---
### p0
<center>
```{r, echo=FALSE}
pander::pander(tb_freq(massa$p0))
```
</center>
---
### p01
<center>
```{r, echo=FALSE}
pander::pander(tb_freq(massa$p01))
```
</center>
---
### Latência mínima
<center>
```{r, echo=FALSE}
pander::pander(tb_freq2(massa$min_lat))
```
</center>
---
### Latência máxima
<center>
```{r, echo=FALSE}
pander::pander(tb_freq2(massa$max_lat))
```
</center>
---
## Resumos numéricos {.tabset .tabset-fade}
Medidas de posição e dispersão para as variáveis numéricas em estudo.
```{r, echo=FALSE}
# Função para tabela de medidas de posição
posicao <- function(vetor){
posicao <- data.frame(Minimo = quantile(vetor)[1],
Quartil_1 = quantile(vetor)[2],
Media = round(mean(vetor), 3),
Mediana = quantile(vetor)[3],
Moda = names(sort(table(vetor),
decreasing = TRUE)[1]),
Quartil_3 = quantile(vetor)[4],
Maximo = quantile(vetor)[5])
row.names(posicao) <- NULL
return(posicao)
}
dispersao <- function(vetor){
dispersao <- data.frame(Amplitude = diff(range(vetor)),
Variancia = round(var(vetor), 3),
Desvio_padrao = round(sd(vetor), 3))
row.names(dispersao) <- NULL
return(dispersao)
}
```
### Medidas de posição
<center>
```{r, echo=FALSE}
# Medidas de posição de todas as variáveis
m1 <- rbind(posicao(massa$min_lat),
posicao(massa$max_lat))
row.names(m1) <- c("min_lat","max_lat")
pander::pander(m1)
```
</center>
---
### Medidas de dispersão
<center>
```{r, echo=FALSE}
m2 <- rbind(dispersao(massa$min_lat),
dispersao(massa$max_lat))
row.names(m2) <- c("min_lat","max_lat")
pander::pander(m2)
```
</center>
---
## Análise gráfica
Gráficos de barras para a frequência de cada nível de cada variável. Traz a mesma informação das já apresentadas tabelas de frequência, porém com um apelo visual.
```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=12}
# Gráficos de barras para todas as variáveis
b_23 <- ggplot(data = massa,
mapping = aes(x = factor(p23))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 23') + ylab('Contagem')
b_4 <- ggplot(data = massa,
mapping = aes(x = factor(p4))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 4') + ylab('Contagem')
b_015 <- ggplot(data = massa,
mapping = aes(x = factor(p015))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 015') + ylab('Contagem')
b_5 <- ggplot(data = massa,
mapping = aes(x = factor(p5))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 5') + ylab('Contagem')
b_0 <- ggplot(data = massa,
mapping = aes(x = factor(p0))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 0') + ylab('Contagem')
b_01 <- ggplot(data = massa,
mapping = aes(x = factor(p01))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Porta 01') + ylab('Contagem')
b_min <- ggplot(data = massa,
mapping = aes(x = factor(min_lat))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Latência mínima') + ylab('Contagem')
b_max <- ggplot(data = massa,
mapping = aes(x = factor(max_lat))) +
geom_bar(alpha = 0.7) + theme_bw() +
xlab('Latência máxima') + ylab('Contagem')
ggpubr::ggarrange(b_23, b_4,b_015, b_5,
b_0, b_01,
b_min,b_max,
nrow = 4,
ncol = 2)
```
---
# Análise bivariada
Análise marginal do efeito das variáveis disponíveis nas variáveis de interesse. Isto é, análise da influência das variáveis nas latências mínima e máxima.
```{r, echo=FALSE}
# Função para análise bivariada, latencias ~ variaveis
tab_bi <- function(variavel){
tabela <- as.data.frame(table(variavel)) # frequência absoluta
tabela$min_lat <- round(tapply(massa$min_lat,
variavel,
mean),3)
tabela$desv_pad_min <- round(tapply(massa$min_lat,
variavel,
sd),3)
tabela$max_lat <- round(tapply(massa$max_lat,
variavel,
mean),3)
tabela$desv_pad_max <- round(tapply(massa$max_lat,
variavel,
sd),3)
names(tabela)[c(1,2)] <- c('Niveis', 'n')
tabela <- tabela[,c(1,3:6,2)]
return(tabela)
}
```
---
## Tabelas {.tabset .tabset-fade}
As tabelas para análise bivariada trazem os níveis da variável de interesse, a latência mínima média para cada nível e seu desvio padrão. O mesmo é feito para a latência máxima e, na última coluna, é mostrado o número de observações que há em cada nível.
---
### p23
<center>
```{r, echo=FALSE}
pander::pander(tab_bi(massa$p23))
```
</center>
---
### p4
<center>
```{r, echo=FALSE}
pander::pander(tab_bi(massa$p4))
```
</center>
---
### p015
<center>
```{r, echo=FALSE}
pander::pander(tab_bi(massa$p015))
```
</center>
---
### p5
<center>
```{r, echo=FALSE}
pander::pander(tab_bi(massa$p5))
```
</center>
---
### p0
<center>
```{r, echo=FALSE}
pander::pander(tab_bi(massa$p0))
```
</center>
---
### p01
<center>
```{r, echo=FALSE}
pander::pander(tab_bi(massa$p01))
```
</center>
---
## Análise gráfica
Análise gráfica do efeito marginal das variáveis em estudo sobre as variáveis de interesse (latências). Para as variáveis numéricas foram produzidos diagramas de dispersão com uma linha de tendência linear. para as variáveis categóricas foram produzidos box-plots para os níveis dos fatores. O último gráfico mostra a relação entre as latências mínima e máxima.
---
```{r, echo=FALSE, fig.align='center', fig.width=10, fig.height=4,warning=FALSE, message=FALSE}
# Função para gráficos de dispersão das latencias
scat1 <- function(porta){
g1 <-   ggplot(data = massa,
mapping = aes_string(x=porta,
y='min_lat')) +
geom_point() +
#geom_smooth(se=F,
#            linetype =
#              'longdash',
#            col = '#2EFE64') +
geom_smooth(method = 'lm',
se = T,
col= 2)+ theme_bw()+
theme(legend.title = element_blank())+
xlab(porta) + ylab('Latência mínima') + ggtitle('')
g2 <-   ggplot(data = massa,
mapping = aes_string(x=porta,
y='max_lat')) +
geom_point() +
#geom_smooth(se=F,
#            linetype =
#              'longdash',
#            col = '#2EFE64') +
geom_smooth(method = 'lm',
se = T,
col= 2)+ theme_bw()+
theme(legend.title = element_blank())+
xlab(porta) + ylab('Latência máxima') + ggtitle('')
ggpubr::ggarrange(g1,g2,
nrow = 1, ncol = 2,
common.legend = TRUE,
legend="bottom",
#labels = paste0(porta, ' em função das latências'),
font.label = list(size = 15))
}
# Função para boxplots
box <- function(porta){
g1 <-   ggplot(data = massa,
mapping = aes_string(x=porta,
y='min_lat')) +
geom_boxplot(fill = 1, alpha = 0.3) +
theme(legend.title = element_blank())+
xlab(porta) + ylab('Latência mínima') + ggtitle('') +
theme_bw()
g2 <-   ggplot(data = massa,
mapping = aes_string(x=porta,
y='max_lat')) +
geom_boxplot(fill = 1, alpha = 0.3) +
theme(legend.title = element_blank())+
xlab(porta) + ylab('Latência máxima') + ggtitle('')   +
theme_bw()
ggpubr::ggarrange(g1,g2,
nrow = 1, ncol = 2,
common.legend = TRUE,
legend="bottom",
#labels = paste0(porta, ' em função das latências'),
font.label = list(size = 15))
}
box("p23")
box("p237")
# Leitura
dados <- read.csv2('latencias_2_NOVA.csv', header = T, sep = ',')
---
#---------------------------------------------------------------
library(tidyverse)
# Leitura
dados <- read.csv2('latencias_2_NOVA.csv', header = T, sep = ',')
#Transformando portas em binárias
dados$p23 <- as.factor(ifelse(dados$p23 > 0, 1,0))
dados$p4 <- as.factor(ifelse(dados$p4 > 0, 1,0))
dados$p015 <- as.factor(ifelse(dados$p015 > 0, 1,0))
dados$p5 <- as.factor(ifelse(dados$p5 > 0, 1,0))
dados$p0 <- as.factor(ifelse(dados$p0 > 0, 1,0))
dados$p01 <- as.factor(ifelse(dados$p01 > 0, 1,0))
dados$p237 <- as.factor(ifelse(dados$p237 > 0, 1,0))
indices <- subset(dados, dados$min_lat<=21 & dados$max_lat<=30)$n
massa <- subset(dados, dados$n %in% indices)
analista <- subset(dados, !(dados$n %in% indices))
nrow(massa)
nrow(analista)
rmarkdown::render_site()
