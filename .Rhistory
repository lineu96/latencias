bc <- data.frame(lambda = bc$x,
loglik = bc$y)
t <- subset(bc, bc$loglik == max(bc$loglik))
densityPlot(x)
densityPlot(x^as.numeric(t[1]))
with(UN, plot(log(ppgdp, 10), log(infantMortality, 10)))
basicPowerAxis(0, base=10, side="above",
at=c(50, 200, 500, 2000, 5000, 20000), grid=TRUE,
axis.title="GDP per capita")
basicPowerAxis(0, base=10, side="right",
at=c(5, 10, 20, 50, 100), grid=TRUE,
axis.title="infant mortality rate per 1000")
with(UN, plot(bcPower(ppgdp, 0), bcPower(infantMortality, 0)))
bcPowerAxis(0, side="above",
grid=TRUE, axis.title="GDP per capita")
bcPowerAxis(0, side="right",
grid=TRUE, axis.title="infant mortality rate per 1000")
boxTidwell(prestige ~ income + education,
~ type + poly(women, 2),
data=Prestige)
with(UN, invTranPlot(ppgdp, infantMortality))
with(UN, invTranEstimate(ppgdp, infantMortality))
b <- rbeta(10,1,2)
round(logit(b),4) == round(log(b/(1 - b)),4)
x <- rgamma(100,1,1)
y <- rpois(100, 4)
z <- rnorm(100, 5)
t <- powerTransform(x ~ y+z)
testTransform(t, c(0))
a <- powerTransform(cbind(len, adt, trks, sigs1) ~ htype, Highway1)
testTransform(a, c(0, 0, 0, -1))
q <- powerTransform(lm(cbind(LoBD$I1L2, LoBD$I1L1) ~ pool, LoBD), family="bcnPower")
testTransform(q, c(.3, .8))
nrow(ls("package:mcglm"))
lenght(ls("package:mcglm"))
length(ls("package:mcglm"))
library(gamlss)
length(ls("package:gamlss"))
?Anova
mod <- lm(conformity ~ fcategory*partner.status, data=Moore,
contrasts=list(fcategory=contr.sum, partner.status=contr.sum))
mod <- lm(conformity ~ fcategory*partner.status, data=Moore,
contrasts=list(fcategory=contr.sum, partner.status=contr.sum))
mod
Anova(mod)
Moore
conformity ~ fcategory*partner.status, data=Moore
Anova(mod, type=3)  # note use of contr.sum in call to lm()
Pottery
lm(cbind(Al, Fe, Mg, Ca, Na) ~ Site, data=Pottery)
Anova(lm(cbind(Al, Fe, Mg, Ca, Na) ~ Site, data=Pottery))
Soils
Soils
soils.mod <- lm(cbind(pH,N,Dens,P,Ca,Mg,K,Na,Conduc) ~ Block + Contour*Depth,
data=Soils)
Manova(soils.mod)
prestige
lm(prestige ~ education + log2(income) + type, data = na.ommit(Prestige))
lm(prestige ~ education + log2(income) + type, data = na.omit(Prestige))
m <- lm(prestige ~ education + log2(income) + type,
data = na.omit(Prestige))
summary(Prestige)
m <- lm(prestige ~ education + log2(income) + type,
data = na.omit(Prestige))
summary(Prestige)
##Anova Tables for Various Statistical Models
library(car)
summary(Prestige)
m <- lm(prestige ~ education + log2(income) + type,
data = na.omit(Prestige))
density(m$residuals)
plot(density(m$residuals))
par(mfrow = c(2,2))
plot(m)
plot(m, 1:4)
anova(m)
anova(m)
anova(m)
Anova(m)
summary(m)
anova(m)
Anova(m)
predict(m)
plot(predict(m))
plot(predict(m))
plot(predict(m)~ Prestige$prestige)
plot(predict(m)~ na.omit(Prestige$prestige))
predict(m)
na.omit(Prestige$prestige)
as.numeric(predict(m))
as.numeric(predict(m))
plot(as.numeric(predict(m))~ na.omit(Prestige$prestige))
na.omit(Prestige$prestige))
na.omit(Prestige$prestige)
as.numeric(predict(m))
plot(as.numeric(predict(m)))
plot(na.omit(Prestige$prestige))
loess(predict(m))
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
dados
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
library(ggplot2)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('') +
geom_abline(slope = 0, intercept = 1)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('') +
geom_segment(1,1,1,1)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('') +
geom_segment(
+
stat_summary(fun.y = median, geom = 'line', aes(group = Day, colour =Day))
)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="line",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="line",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom=c("point", "line"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom=c("point", "line"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(fun.y = median,
geom = 'line')+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(fun.y = median,
geom = 'line',
aes(group = fat1, colour =fat1)))
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(fun.y = median,
geom = 'line',
aes(group = fat1, colour =fat1))
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
library(ggplot2)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(
fun.y = median,
geom = 'line',
position = position_dodge(width = 0.9) #this has to be added
)+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
#  stat_summary(fun.y=median,
#               geom=c("point"),
#               shape=20,
#               size=3,
#               color="red",
#               fill="red")+
stat_summary(
fun.y = median,
geom = 'line',
position = position_dodge(width = 0.9) #this has to be added
)+
xlab('') + ylab('') + ggtitle('')
stat_summary(
fun.y = median,
geom = 'line',
aes(group = fat1, colour = fat1),
position = position_dodge(width = 0.9) #this has to be added
)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(
fun.y = median,
geom = 'line',
aes(group = fat1, colour = fat1),
position = position_dodge(width = 0.9) #this has to be added
)+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g1 <- ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g2 <- ggplot(data = dados, mapping = aes(x=fat2, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
library(ggplot2)
library(ggpubr)
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
g1 <- ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g2 <- ggplot(data = dados, mapping = aes(x=fat2, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggarrange(g1, g2,
nrow = 1, ncol = 2)
library(ggplot2)
library(ggpubr)
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
g1 <- ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g2 <- ggplot(data = dados, mapping = aes(x=fat2, y=resp, color=fat2)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggarrange(g1, g2,
nrow = 1,
ncol = 2)
##rm(list=ls())
## prevalencia
pS <- 0.50,0.60
##rm(list=ls())
## prevalencia
pS <- 0.50
pH <- 1-pS
## teste 1
pE.S <- 0.80
pnE.S <- 1-pE.S
pnE.H <- 0.65
pE.H <- 1 - pnE.H
## prevalencia
pS <- 0.50
pH <- 1-pS
## teste 1
pE.S <- 0.80
pnE.S <- 1-pE.S
pnE.H <- 0.65
pE.H <- 1 - pnE.H
(pE <- (pE.S * pS) + (pE.H * pH))
(pnE <- (pnE.S * pS) + (pnE.H * pH))
(pS.E <- (pE.S * pS)/pE)
(pH.E <- (pE.H * pH)/pE)
##rm(list=ls())
## prevalencia
pS <- 0.50
pH <- 1-pS
## teste 1
pE.S <- 0.80
pnE.S <- 1-pE.S
pnE.H <- 0.65
pE.H <- 1 - pnE.H
(pE <- (pE.S * pS) + (pE.H * pH))
(pnE <- (pnE.S * pS) + (pnE.H * pH))
(pS.E <- (pE.S * pS)/pE)
(pH.E <- (pE.H * pH)/pE)
## teste 2
(pM.S <- 0.65
## teste 2
pM.S <- 0.65
## teste 2
pM.S <- 0.65
(pnM.S <- 1 - pM.S)
(pnM.H <- 0.55)
(pM.H <- 1 - pnM.H)
(pM <- (pM.S * pS) + (pM.H * pH))
(pnM <- (pnM.S * pS) + (pnM.H * pH))
(pS.M <- (pM.S * pS)/pM)
(pH.M <- (pM.H * pH)/pM)
## combinando testes 1 e 2
(cS.EM <- pM.S * pE.S * pS)
(cH.EM <- pM.H * pE.H * pH)
(pS.EM <- cS.EM/(cS.EM + cH.EM))
(pH.EM <- cH.EM/(cS.EM + cH.EM))
## QUESTION/ANSWER GENERATION
questions <- character(6)
solutions <- logical(6)
explanations <- character(6)
foo1 <- c(pE.S, pS.E)
i1 <- sample(1:2, 1)
questions[1] <- paste("Se um email contém anexo executável a probabilidade de ser SPAM é de", round(foo1[i1], dig=2))
solutions[1] <- (i1 == 2)
explanations[1] <- paste("Aplicando o teorema de Bayes obtém-se P[S|E] = ", round(pS.E, dig=2))
foo2 <- c(pM.S, pS.M)
i2 <- sample(1:2, 1)
questions[2] <- paste("Se um email contém maiúsculas a probabilidade de ser SPAM é de", round(foo2[i2], dig=2))
solutions[2] <- (i2 == 2)
explanations[2] <- paste("Aplicando o teorema de Bayes obtém-se P[S|M] = ", round(pS.M, dig=2))
foo3 <- c("ser SPAM", "não ser SPAM")
i3 <- sample(1:2, 1)
questions[3] <- paste("Se um email contém anexo executável a probabilidade maior é de", foo3[i3])
solutions[3] <- ifelse(i3 == 1, (pS.E > pH.E), (pS.E < pH.E))
explanations[3] <- paste("P[S|E] = ", round(pS.E, dig=2), "e P[H|E] = ", round(pH.E, dig=2))
foo4 <- c(pE.H+pM.H - pE.H*pM.H, pH.EM)
i4 <- sample(1:2, 1)
questions[4] <- paste("Se um email contém ambos, anexo executável e maiúsculas a probabilidade de não ser SPAM é de", round(foo4[i4], dig=2))
solutions[4] <- (i4 == 2)
explanations[4] <- paste("Aplicando o teorema de Bayes obtém-se P[H|E,M] = ", round(pH.EM, dig=2))
foo5 <- c("SPAM","não SPAM")
i5 <- sample(1:2, 1)
questions[5] <- paste("Adota-se o seguinte critério: um email é marcado como SPAM se após observar ambas características a probabilidade de ser SPAM ultrapasse 0,80. Portento, se um email contiver anexo executável e maiúsculas ele será marcado como:", foo5[i5])
solutions[5] <- ifelse(i5 == 1, (pS.EM > 0.80),(pS.EM <= 0.80))
explanations[5] <- paste("Aplicando o teorema de Bayes obtém-se P[S|E,M] = ", round(pS.EM, dig=2))
foo6 <- c(pE, pE.S)
i6 <- sample(1:2, 1)
questions[6] <- paste("A probabilidade de receber um email que contenha um anexo executável é", round(foo6[i6], dig=2))
solutions[6] <- (i6 == 1)
explanations[6] <- paste("P[E] = P[E|S]P[S] +  P[E|H]P[H] = ", round(pE, dig=2))
(pS.M <- (pM.S * pS)/pM)
(pS.E <- (pE.S * pS)/pE)
pM.S
pE.S
pS
pM.S * pE.S * pS
22-6
51-14
22+36+51
getwd()
setwd("~/latencias")
rmarkdown::render_site()
